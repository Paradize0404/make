from fastapi import FastAPI, Request
import httpx
import os
import logging
from dotenv import load_dotenv

load_dotenv()

MAKE_WEBHOOK_URL = os.getenv("MAKE_WEBHOOK_URL")

app = FastAPI()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(level=logging.DEBUG)

@app.post("/")
async def proxy_to_make(request: Request):
    data = await request.json()
    logging.info(f"üì• –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: {data}")

    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(MAKE_WEBHOOK_URL, json=data)
            logging.info(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Make, —Å—Ç–∞—Ç—É—Å: {response.status_code}, —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Make: {e}")
        return {"status": "error", "details": str(e)}

    return {"status": "forwarded", "make_status": response.status_code}
